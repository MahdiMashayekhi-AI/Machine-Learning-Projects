# -*- coding: utf-8 -*-
"""Pan_Card_Detector.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1KtMsaxIh8Imm43-f-W-UQFeQ8cSA3Hk1

# Pan Card Detector
"""



"""## Importing the libraries"""

import cv2
import requests
import imutils
from PIL import Image
from skimage.metrics import structural_similarity

"""## Importing Data

### Make directory for pan cards
"""

! mkdir pan_card
! mkdir pan_card/image

"""### Open images and display"""

original = Image.open(requests.get('https://www.thestatesman.com/wp-content/uploads/2019/07/pan-card.jpg', stream=True).raw)
tampered = Image.open(requests.get('https://assets1.cleartax-cdn.com/s/img/20170526124335/Pan4.png', stream=True).raw)

# The file format of the source file.
print("Original image format : ",original.format)
print("Tampered image format : ",tampered.format)

# Image size, in pixels. The size is given as a 2-tuple (width, height).
print("Original image size : ",original.size)
print("Tampered image size : ",tampered.size)

"""#### Converting the format of  tampered image similar to original image."""

# Resize Image
original = original.resize((250, 160))
original.save('pan_card/image/original.png')
print(original.size)

tampered = tampered.resize((250, 160))
tampered.save('pan_card/image/tampered.png')
print(tampered.size)

"""### Display the images"""

original

tampered

"""## Process on the images with cv2"""

original = cv2.imread('pan_card/image/original.png')
tampered = cv2.imread('pan_card/image/tampered.png')

"""### Convert the images to grayscale"""

original_gray = cv2.cvtColor(original, cv2.COLOR_BGR2GRAY)
tampered_gray = cv2.cvtColor(tampered, cv2.COLOR_BGR2GRAY)

"""### Compute the Structural Similarity Index (SSIM)"""

(score, diff) = structural_similarity(original_gray, tampered_gray, full=True)
diff = (diff * 255).astype('uint8')
print('SSIM: {}'.format(score))

"""### Calculating threshold and contours"""

thresh = cv2.threshold(diff, 0, 255, cv2.THRESH_BINARY_INV | cv2.THRESH_OTSU)[1]
cnts = cv2