# -*- coding: utf-8 -*-
"""Simple-Linear-Regression.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1N-HsEvQqEIlnNz33gj8azE8VjaaQhqpv

# Simple Linear Regession

## Import libraries
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

"""## Import the dataset"""

dataset = pd.read_csv('Salary_Data.CSV')
X = dataset.iloc[:, :-1].values
y = dataset.iloc[:, -1].values

"""## Spliting dataset into train and test"""

from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=0)

"""## Training the Simple Linear Regression model on the Training set"""

from sklearn.linear_model import LinearRegression
model = LinearRegression()
model.fit(X_train, y_train)

print('Coef: ', model.coef_)
print('Intercept: ', model.intercept_)

y_pred = model.predict(X_test)

y_pred

"""## Visualising the Training set results"""

plt.scatter(X_train, y_train, color='red')
plt.plot(X_train, model.predict(X_train), color='blue')
plt.title('Expreience vs Salary (Training)')
plt.xlabel('Expreience')
plt.ylabel('Salary')
plt.show()

"""## Visualising the Test set results"""

plt.scatter(X_test, y_test, color='red')
plt.plot(X_test, y_pred, color='blue')
plt.title('Expreience vs Salary (Testing)')
plt.xlabel('Expreience')
plt.ylabel('Salary')
plt.show()

from sklearn.metrics import mean_squared_error
score = mean_squared_error(y_test, y_pred)
print(score)

